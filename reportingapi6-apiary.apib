FORMAT: 1A
HOST: https://api.paysafe.com/reporting/v1/

# Reporting API Reference

Paysafe's Reporting API provides endpoints for querying and generating reports based on your payments history. You can extract the data to a report in .csv format. You can retrieve the following reports using the API:

The reports you obtain from Paysafe contain data about your transactions that are more than 24 hours old. 

For a detailed description on types of reports, see [<b>Report Types</b>](https://prlocal-developer-paysafe-com.eu.paysafecorp.com/en/rest-apis/reports-api/report-types/) 

# Prerequisites
<a name="prereq" title="Prerequisites"></a>

Below are the prerequisite steps for merchant onboarding: 

1. The partner must contact the account manager to set up the account.
2. Paysafe integrations team provides the authentication credentials after the merchant account set up is complete. 

### Scope and Restrictions

* All the APIs are RESTful.
* Only the Direct Merchants and Platform Partners with a Shared API key can use this API.
* Onboarding reports are available only to Partners. 


<a name="apikey" title="Authentication"></a>
# Authentication 

To use the Paysafe REST API, Paysafe must first set up its system for you 
and then provide an API key. 

Your API key looks something like this:
 * Key ID – PartnerXYZ
 * Key Password – B-tst1-0-51ed39e4-312d02345d3f123120881dff9bb4020a89e8ac44cdfdcecd702151182fdc952272661d290ab2e5849e31bb03deede7e

HTTP Basic Authentication sends the case-sensitive API key. To use HTTP Basic Authentication, you must send the API key credentials using the Authorization header with every request. The Authorization header is constructed as follows:
 1. Combine the Key ID and Key Password into a string separated by a colon, for example: “Key ID:Key Password”.
 2. The resulting string literal is then encoded using Base64.
 3. The authorization method and the space (that is, “Basic”) are added before the encoded string.

For example, using the Key ID and Password examples above, the header is formed as follows:

`Authorization: Basic
UGFydG5lclhZWjpCLXRzdDEtMC01MWVkMzllNC0zMTJkMDIzNDVkM2YxMjMxMjA4ODFkZmY5YmI0MDIwYTg5ZThhYzQ0Y2RmZGNlY2Q3MDIxNTExODJmZGM5NTIyNzI2NjFkMjkwYWIyZTU4NDllMzFiYjAzZGVlZGU3ZQ==`

For additional details, refer to [Authentication](https://developer.paysafe.com/en/rest-apis/reference-information/important-integration-concepts/authentication/).

> **Note:** Your Production API key will be different from your Test API key. Contact your account manager for details. You must keep your API keys safe and ensure that they are used appropriately for your needs.

# Getting Started

Click [here](https://prlocal-developer-paysafe-com.eu.paysafecorp.com/en/rest-apis/reports-api/getting-started/) for details on Reporting API


# Going Live
 
Once you are satisfied with your integration to the Test environment, you must repeat the configuration changes made to your Test account on your Production account.

> **Note:** You cannot use your Test credentials to process transaction requests in the Production environment.

### Go Live Checklist
1. You must have a production account and an Onboarding Config ID for your production account.
2. You must have the API Keys for the production environment.
3. You must use the Production URL for your API calls.

> **Note:** For items 1, 2, & 3, reach out to your account manager or <integrations@paysafe.com> for any issues.

### Production URL
To process live requests with Paysafe, use the following Production URL:

`https://api.paysafe.com/reporting/v1/`

For Example:

`https://api.paysafe.com/reporting/v1/report-requests`

### Test URL
To process live requests with Paysafe, use the following Test URL:

`https://api.test.paysafe.com/reporting/v1/`

For Example:

`https://api.test.paysafe.com/reporting/v1/report-requests`

# Common Errors

| HTTP Status | Error Code    | Error Message |Description |
|-------------|---------------|-------------  |------------|
|401                |5279           |Invalid Credentials|The authentication credentials are invalid.|
|403                |5270           |Unauthorized access|Authorization does not contain requested permissions.|
|400                |5068           |An invalid request was submitted.|Either you submitted a request that is missing a mandatory field, or the value of a field does not match the format expected.|
|404                |5269           |Entity not found|Report does not exist with the given id.|
|500                |1000           |Internal Error|An internal error occurred.|

# API Specific Errors 

| HTTP Status | Error Code    | Error Message |Description |
|-------------|---------------|-------------  |------------|
|400                |5269           |Entity not found|You have not subscribed to this report, or there are no active webhooks.|
|400                |5068           |An invalid request was submitted.|Provide Both intervalStartTime and intervalEndTime Or Provide Nothing.|
|400                |5068           |An invalid request was submitted.|intervalStartTime or intervalEndTime cannot be a Future date.|
|400                |5068           |An invalid request was submitted.|intervalStartTime should be less than intervalEndTime|
|400                |5068           |An invalid request was submitted.|intervalStartTime and intervalEndTime should be between X days.|
|500                |11006          |Something went wrong!|Something went wrong!|
|404                |11100          |Subscription does not exist with the given id.|Subscription does not exist with the given id.|
|400                |11102          |Invalid webhookConfig in Subscription.|Webhook Config should be provided.|
|404                |11001          |Report does not exist with given id.|Report does not exist with given id.|
|404                |11301          |Invalid intervalStartTime/intervalEndTime in Report Request.|Invalid intervalStartTime/intervalEndTime in Report Request.|


# Use Cases

## Use Case # 1 

200 Status: Generate a Report Using POST Method

```apib

REQUEST
    
    {
            "columns": [
            "AuthDate",
            "DBA"
        ],
        "interval": {
        "type": "PREVIOUS_WEEK"
        },
        "reportType": "onboarding_report",
        "timeZone": "EST",
        "webhook": {
        "url": "https://webhook.site/26c2d4c8-e036-4a54-9024-5497482f62e9"
        }
    }
    
```

```apib

RESPONSE

    {
        "reportType": "onboarding_report",
        "timeZone": "EST",
        "columns": [
        "AuthDate",
        "DBA"
        ],
        "interval": {
        "startDate": "2021-11-22T05:00:00Z",
        "endDate": "2021-11-29T05:00:00Z"
        },
        "webhook": {
        "url": "https://webhook.site/26c2d4c8-e036-4a54-9024-5497482f62e9"
        },
        "id": "b7715045-633e-4218-a303-056f1ede5196",
        "status": "PENDING"
    }
```
## Use Case # 2 

200 Status: Generate a Report Using GET Method

```apib

REQUEST

Do not supply a request body for this method.

```

```apib

RESPONSE

    {
    "reportType": "onboarding_report",
    "timeZone": "UTC",
    "columns": [],
    "interval": {
        "startDate": "2021-07-22T05:00:00Z",
        "endDate": "2021-12-01T05:00:00Z"
    },
    "webhook": {
        "url": "https://webhook.site/26c2d4c8-e036-4a54-9024-5497482f62e9"
    },
    "id": "2301621b-a7b0-415d-9d3e-b866ee3b12d2",
    "status": "COMPLETED"
}
```


## Use Case # 3

200 Status: With Minimum Requirments 

```apib

REQUEST

{
    "interval": {
        "type": "PREVIOUS_WEEK"
    },
    "reportType": "onboarding_report",
    "timeZone": "EST",
    "webhook": {
        "url": "https://webhook.site/26c2d4c8-e036-4a54-9024-5497482f62e9"
    }
}
```

```apib

RESPONSE

{
    "reportType": "onboarding_report",
    "timeZone": "EST",
    "interval": {
        "startDate": "2021-11-22T05:00:00Z",
        "endDate": "2021-11-29T05:00:00Z"
    },
    "webhook": {
        "url": "https://webhook.site/26c2d4c8-e036-4a54-9024-5497482f62e9"
    },
    "id": "6dfb96ab-e279-4f81-aae7-5c40b833d5e3",
    "status": "PENDING"
}
```
## Use Case # 4

400 Error: Empty Intervals

```apib

REQUEST

{
    "columns": [
        "AuthDate",
        "DBA"
    ],
    "interval": {
 |   },
    "reportType": "onboarding_report",
    "timeZone": "EST",
    "webhook": {
        "url": "https://webhook.site/26c2d4c8-e036-4a54-9024-5497482f62e9"
    }
}

```

```apib

RESPONSE

{
    "error": {
        "code": "5068",
        "message": "Field error(s)",
        "details": [
            "Provide either interval.type or interval.startDate & interval.endDate"
        ]
    }
}
```

# Webhooks
<a name="webhooks" title="Webhooks"></a>

The URL for webhook is mandatory, as they are user-defined HTTP callbacks. A user creates a URL in their app that is accessible from the public web, which is usually triggered by an event, such as publishing code to a repository (also known as payload).

> **Note:** To receive webhooks from Paysafe, you must create a callback URL to receive the webhook that is triggered. 
Paysafe will attempt a maximum of three times to deliver the report if your webhook is unreachable. You are responsible for ensuring its continued availability.

> **Note:** The above payload sample is for example purposes only, and they must be changed by the end user/merchant/partner.

### Webhook Event Schema

|Element            |Type             |Constraints                                  |Description                                                                       |
|---                |---              |---                                          |                                     ---                                          |
|id                 |String           |Length <=36                                  |Unique event id generated for each webhook delivery event                         |
|subscriptionId     |String           |Length <=36                                  |ID generated by the reporting system for the report that's been subscribed to     |
|reportType         |String           |Enumeration                                  |Report type taken from the subscription                                            |
|status             |String           |Enumeration                                  |COMPLETED, FAILED                                                                 |
|urls               |List of Strings  |Size max=10                                  |List of urls to download the report files                                         |
|createdDate        |dateTime         |UTC formatted date, yyyy-MM-dd'T'HH:mm:ssZ   |Date of creation of the report request                                            |
|format             |String           |Enumeration                                  |Expose only CSV initially                                                         |
|channel            |String           |Enumeration                                  |HTTPS, SFTP (expose only https initially until portal flow is enabled.)           |

You will receive the following webhook payload for the specified callback URL. Webhook will be delivered within 30 minutes from when the request is accepted. The payload contains a link from where you can download the report. 

The following payload sample illustrates the payload using which you can download the report: 

```j
"report": {
    "id": "5cf5d120-cb3f-497b-aae8-dbcf1df4f657",
    "status": "SUCCEEDED",
    "urls": [
      "https://bucket.s3.amazonaws.com.s3.ca-central-1.amazonaws.com/reportOutputs/2020_11/6cd9b563-65fa-460e-9052-c823d2d3f331/c31f2940-a47a-4130-9e4b-8d2e74ed953b.csv..."
    ],
    "subscriptionId": "5cf5d120-cb3f-497b-aae8-dbcf1df4f657",
    "reportType": "onboarding_pending",
    "createdDate": "2021-12-03T10:07:34.332+0000",
    "format": "CSV",
    "channel": "HTTPS"
  }
```
> **Note:** You can download the reports for a pre-defined period (up to seven days). 
```


# Previous Week Report

# Pagination

In the case where an API GET request returns multiple results, Paysafe returns the first 10 records by default and uses links to provide page navigation. In addition to the default behavior, it is also possible to control the number of results and starting point by passing in query parameters  as described in this [section](https://developer.paysafe.com/en/resources-and-support/pagination/).

<a name="globalinvalidcharacters" title="Global Invalid Characters"></a>
# Global Invalid Characters

You must not include any of the characters in this [table](https://developer.paysafe.com/en/resources-and-support/global-invalid-characters/) as values in any of your request parameters. Object. If you do, your request will result in an error.

<a name="isostandards" title="ISO Standards"></a>
# ISO Standards

ISO standards add value by providing the common business process data semantics to be used in the API based exchanges. This [section](https://developer.paysafe.com/en/resources-and-support/iso-standards/) presents you codes for four areas - Currency, Province, State, and Country. 

# Legal and Community
<ul>
<li><a href="https://www.paysafe.com/paysafegroup/privacy-policy/" target="_blank">Privacy Policy</a></li>
<li><a href="https://developer.paysafe.com/en/resources-and-support/terms-of-use/" target="_blank">Terms of Use</a></li>
<li><a href="https://www.paysafe.com/paysafegroup/regulatory-disclosures/" target="_blank">Regulatory Disclosures</a></li>
</ul>

# Group Subscriptions

## Create Subscription [/subscriptions]

## Subscribe to a Report [POST /subscriptions]
<a name="subscribereport" title="Subscribe a Report"></a>

Click **Subscribe to a Report** above to create a report subscription. 

Use this API to subscribe for reports that you want to be delivered over HTTP endpoint (webhooks). When you subscribe to a report, a unique "subscriptionId" is returned in the response.<br/><br/>

> **Notes:** 

<ul>
    <li>You have to use this unique subscriptionId to retrieve a report.</li>
    <li>If a request is created for a report which already has a subscription, then, the new request overwrites the existing request.</li>
</ul>
    
+ Attributes
    
    + id : `b7715045-633e-4218-a303-056f1ede5196` (string) - ID generated by the reporting system for the report that's been subscribed to.
    _length<=36_
    + reportType : `onboarding_report` (string) - Please add report types supported in a separate table with the details such as: Column 1 - Type, Column 2 - Description, Row Data (Type) - balance_change_from_activity.itemized.3.
    _enumeration_
    + Status : `PENDING` (string) - PENDING, COMPLETED, FAILED.
    _enumeration_
    + timeZone : `EST` (string) - List of possible values are maintained by the IANA Standard Timezone Database, Example: America/Los_Angeles (We should consider UTC for all dates in report results rather than return reports in a specific timezone).
    _enumeration_
    + columns[] : (string) - An array of the subset of columns to return back as part of the report.
    _length=50_
    + fileNamePattern : (string) - The name of the report file generated. 
    Filename can be specified using predefined keywords (Supported keywords can be: REPORT_TYPE,INTERVAL_FROM_DATE, INTERVAL_TO_DATE, EXECUTION_TIMESTAMP.) Keywords should be enclosed in ${}.
    _Length max=255_
    + INTERVAL (required) - Specify the date range as part of the report query it can be either a predefined type or specify a more granular range.
    + interval.startDate : `2021-11-22T05:00:00Z` (string) - The start date for the report, Example: 2014-01-26T10:32:28Z.
    _UTC formatted date, yyyy-MM-dd'T'HH:mm:ssZ_
    + interval.endDate : `2021-11-29T05:00:00Z` (string) - Unique event id generated for each webhook delivery event.
    _UTC formatted date_
    + interval.type : (string) - Predefined report ranges: PREVIOUS_DAY, PREVIOUS_MONTH, PREVIOUS_WEEK. 
    You may choose an interval type or interval start/end date but not both
    _enumeration_
    
    + WEBHOOK - Specify the delivery channel details.
    + webhook.url : `https://webhook.site/26c2d4c8-e036-4a54-9024-5497482f62e9` (string, required) - The webhook url to deliver the report.
    _Length max=2048_
        
   
+ Request Subscribe to a Report (application/json)
        
    + Headers
    
            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY

    + Body
        
        {
            "columns": [
            "AuthDate",
            "DBA"
            ],
            "interval": {
            "type": "PREVIOUS_WEEK"
                },
            "reportType": "onboarding_report",
            "timeZone": "EST",
            "webhook": {
            "url": "https://webhook.site/26c2d4c8-e036-4a54-9024-5497482f62e9"
        }
        }
        
+ Response 200 (application/json;charset=utf8)

    + Headers
    
            Transfer-Encoding :chunked
            Date:Tue, 27 Oct 2020 07:19:31 GMT
            X-INTERNAL-CORRELATION-ID: a755ee28-e1dd-4b0a-8b72-955f7ae8a623
            X-Application-Error-Code:  1000
            X-Application-Status-Code: 1000
            X-Application-Error-Message: Internal Error
            X-Application-Error-Description: An internal error occurred

   + Body

       
        {
            "reportType": "onboarding_report",
            "timeZone": "EST",
            "columns": [
            "AuthDate",
            "DBA"
            ],
            "interval": {
            "startDate": "2021-11-22T05:00:00Z",
            "endDate": "2021-11-29T05:00:00Z"
            },
            "webhook": {
            "url": "https://webhook.site/26c2d4c8-e036-4a54-9024-5497482f62e9"
            },
            "id": "b7715045-633e-4218-a303-056f1ede5196",
            "status": "PENDING"
        }
        


## Get Subscription [/subscriptions]

### Get Subscriptions [GET /subscriptions/subscriptionid]

<a name="getsubscription" title="Get a List of Subscriptions"></a>
Click **Get Subscriptions** above to retrieve a single subscription object.<br/>
This API uses the subscriptionId returned in response when you subscribe for a report.
  
+ Parameters

    + subscriptionId : This is the subscription id of a report subscription.
   

+ Request Get Subscriptions (application/json)
    
    + Headers
    
            Authorization: Basic YOUR-BASE64-ENCODED-API-KEY
            
+ Response 200 (application/json;charset=utf8)

    + Headers
    
            Transfer-Encoding :chunked
            Date:Tue, 27 Oct 2020 07:19:31 GMT
            X-INTERNAL-CORRELATION-ID: a755ee28-e1dd-4b0a-8b72-955f7ae8a623
            X-Application-Error-Code:  1000
            X-Application-Status-Code: 1000
            X-Application-Error-Message: Internal Error
            X-Application-Error-Description: An internal error occurred

    
   + Body

       {
            "reportType": "onboarding_report",
            "timeZone": "UTC",
            "columns": [],
            "interval": {
            "startDate": "2021-07-22T05:00:00Z",
            "endDate": "2021-12-01T05:00:00Z"
            },
            "webhook": {
            "url": "https://webhook.site/26c2d4c8-e036-4a54-9024-5497482f62e9"
                },
            "id": "2301621b-a7b0-415d-9d3e-b866ee3b12d2",
            "status": "COMPLETED"
        }